{"version":3,"sources":["components/Header.js","components/AddToDo.js","components/Todo.js","components/Todos.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","Container","className","Brand","AddToDo","addTodo","useState","name","setName","status","setStatus","Form","onSubmit","e","preventDefault","alert","Row","Col","sm","Control","type","value","onChange","target","placeholder","xs","Button","Todo","todo","removeTodo","markTodo","style","textDecoration","variant","onClick","id","Todos","todos","map","Card","Body","App","setTodos","useEffect","getTodos","a","fecthTodos","todosFromServer","fetch","res","json","data","fetchTodo","method","headers","body","JSON","stringify","filter","todoToToggle","updatedTodo","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAceA,EAZA,WACX,OACI,8BACI,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAX,SACI,cAACC,EAAA,EAAD,CAAWC,UAAU,yBAArB,SACA,cAACH,EAAA,EAAOI,MAAR,6C,gCCsCDC,EA1CC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAgBA,OAEH,eAACC,EAAA,EAAD,CAAMC,SAhBkB,SAAAC,GAEjBA,EAAEC,iBACGP,GAKLF,EAAQ,CAAEE,OAAME,WAEhBD,EAAQ,IACRE,GAAU,IAPNK,MAAM,sBAYjB,UACC,uBACD,eAACC,EAAA,EAAD,CAAKd,UAAU,qBAAf,UACC,cAACe,EAAA,EAAD,CAAKC,GAAI,GAAIhB,UAAU,OAAvB,SAEC,cAACS,EAAA,EAAKQ,QAAN,CACCC,KAAK,OACLlB,UAAU,QACVmB,MAAOd,EACPe,SAAU,SAAAT,GAAOL,EAAQK,EAAEU,OAAOF,OAAQX,GAAU,IACpDc,YAAY,mBAGd,cAACP,EAAA,EAAD,CAAKQ,GAAG,OAAOvB,UAAU,OAAzB,SACA,cAACwB,EAAA,EAAD,CAAQN,KAAK,SAAb,2BAGD,2BC1BcO,EAZF,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAChC,OACE,sBAAK5B,UAAU,OAAf,UACE,sBAAM6B,MAAO,CAAEC,eAAgBJ,EAAKnB,OAAS,eAAiB,IAA9D,SAAqEmB,EAAKrB,OAC1E,gCACE,cAACmB,EAAA,EAAD,CAAQO,QAAQ,iBAAiBC,QAAS,kBAAML,EAAWD,EAAKO,KAAhE,oBACA,cAACT,EAAA,EAAD,CAAQO,QAAQ,kBAAkBC,QAAS,kBAAMJ,EAASF,EAAKO,KAA/D,yB,QCaOC,EAlBD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOR,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAClC,OACE,8BACOO,EAAMC,KAAI,SAAAV,GAAI,OACb,cAACW,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,KAAN,UACE,cAAC,EAAD,CACAZ,KAAMA,EACNE,SAAUA,EACVD,WAAYA,OALLD,EAAKO,UCuFbM,MAtFf,WACE,MAA0BnC,mBAAS,IAAnC,mBAAO+B,EAAP,KAAcK,EAAd,KAEAC,qBAAU,WACT,IAAMC,EAAQ,uCAAG,4BAAAC,EAAA,sEACcC,IADd,OACVC,EADU,OAEhBL,EAASK,GAFO,2CAAH,qDAKdH,MACE,IAEH,IAAME,EAAU,uCAAG,8BAAAD,EAAA,sEACCG,MAAM,6BADP,cACXC,EADW,gBAEEA,EAAIC,OAFN,cAEXC,EAFW,yBAGVA,EAAKd,OAHK,2CAAH,qDAMVe,EAAS,uCAAG,WAAOjB,GAAP,iBAAAU,EAAA,sEACEG,MAAM,6BAAD,OAA8Bb,IADrC,cACVc,EADU,gBAEGA,EAAIC,OAFP,cAEVC,EAFU,yBAGTA,EAAKvB,MAHI,2CAAH,sDAMTvB,EAAO,uCAAG,WAAOuB,GAAP,iBAAAiB,EAAA,sEACIG,MAAM,6BAA8B,CACpDK,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU7B,KANT,cACRqB,EADQ,gBASKA,EAAIC,OATT,OASRC,EATQ,OAWdT,EAAS,GAAD,mBAAKL,GAAL,CAAYc,EAAKvB,QAXX,2CAAH,sDAePC,EAAU,uCAAG,WAAOM,GAAP,SAAAU,EAAA,sEACCG,MAAM,gCAAD,OAAiCb,GAAM,CAC5DkB,OAAQ,WAFO,OAKF,MALE,OAKb5C,OACAiC,EAASL,EAAMqB,QAAO,SAAC9B,GAAD,OAAUA,EAAKO,KAAOA,MAC5CpB,MAAM,qCAPO,2CAAH,sDAUVe,EAAQ,uCAAG,WAAOK,GAAP,qBAAAU,EAAA,sEACYO,EAAUjB,GADtB,cACTwB,EADS,OAETC,EAAc,CAAEnD,QAASkD,EAAalD,QAF7B,SAIGuC,MAAM,6BAAD,OAA8Bb,GAAM,CACzDkB,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUG,KATR,UAYA,OARTX,EAJS,QAYXxC,OAZW,kCAcEwC,EAAIC,OAdN,QAcXC,EAdW,OAgBjBT,EACEL,EAAMC,KAAI,SAACV,GAAD,OACXA,EAAKO,KAAOA,EAAZ,2BAAsBP,GAAtB,IAA4BnB,OAAQ0C,EAAKvB,KAAKnB,SAAWmB,MAlBzC,4CAAH,sDA0Bd,OACE,qBAAK1B,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACF,cAAC,EAAD,IACF,cAAC,EAAD,CAASG,QAASA,IACjBgC,EAAMwB,OAAS,EAAK,cAAC,EAAD,CAAOxB,MAAOA,EAAOR,WAAYA,EAAYC,SAAUA,IAAiB,yBC5EhFgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c047d120.chunk.js","sourcesContent":["import { Navbar, Container } from 'react-bootstrap';\n\nconst Header = () => {\n    return (\n        <div>\n            <Navbar bg=\"light\" >\n                <Container className=\"justify-content-center\">\n                <Navbar.Brand>Todo List With REST API</Navbar.Brand>\n                </Container>\n            </Navbar>\n        </div>\n    )\n}\n\nexport default Header\n","import { Button, Form, Row, Col } from 'react-bootstrap';\nimport { useState } from 'react'\n\nconst AddToDo = ({ addTodo }) => {\n    const [name, setName] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n\n    const handleSubmit = e => {\n      \n        e.preventDefault();\n        if (!name) {\n            alert('Please enter text');\n            return\n        }\n\n        addTodo({ name, status});\n\n        setName(\"\");\n        setStatus(false);\n    };\n  \n    return (\n\t\t\n\t<Form onSubmit={handleSubmit}>\n\t\t<br/>\n\t<Row className=\"align-items-center\">\n\t\t<Col sm={10} className=\"my-1\">\n\n\t\t\t<Form.Control \n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName=\"input\"\n\t\t\t\tvalue={name}\n\t\t\t\tonChange={e => { setName(e.target.value); setStatus(false) } } \n\t\t\t\tplaceholder=\"Add new todo\" />\n\t\t\n\t\t</Col>\n\t\t<Col xs=\"auto\" className=\"my-1\">\n\t\t<Button type=\"submit\">Add Todo</Button>\n\t\t</Col>\n\t</Row>\n\t<br/>\n</Form>\n    );\n}\n\nexport default AddToDo\n\n","import { Button} from 'react-bootstrap';\n\nconst Todo = ({ todo, removeTodo, markTodo }) => {\n  return (\n    <div className=\"todo\" >\n      <span style={{ textDecoration: todo.status ? \"line-through\" : \"\" }}>{todo.name}</span>\n      <div>\n        <Button variant=\"outline-danger\" onClick={() => removeTodo(todo.id)}>Delete</Button>\n        <Button variant=\"outline-primary\" onClick={() => markTodo(todo.id)}>Done</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default Todo\n","import Todo from './Todo';\nimport { Card } from 'react-bootstrap';\n\nconst Todos = ({ todos, removeTodo, markTodo }) => {\n  return (\n    <div>\n          {todos.map(todo => (\n            <Card key={todo.id}>\n              <Card.Body>\n                <Todo                \n                todo={todo}\n                markTodo={markTodo}\n                removeTodo={removeTodo}\n                />\n              </Card.Body>\n            </Card>\n          ))}\n        </div>\n  )\n}\n\nexport default Todos\n","import { useState, useEffect } from 'react'\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\nimport AddToDo from './components/AddToDo';\nimport Todos from './components/Todos';\n\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n\t  const getTodos = async () => {\n\t\t  const todosFromServer = await fecthTodos();\n\t\t  setTodos(todosFromServer);\n\t  }\n\n\t  getTodos();\n  }, []);\n\n  const fecthTodos = async () => {\n    const res = await fetch('http://localhost:5001/get')\n    const data = await res.json();\n    return data.todos;\n  }\n\n  const fetchTodo = async (id) => {\n    const res = await fetch(`http://localhost:5001/get/${id}`)\n    const data = await res.json();\n    return data.todo\n  }\n\n  const addTodo = async (todo) => {\n    const res = await fetch('http://localhost:5001/post', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(todo),\n    })\n\n    const data = await res.json();\n\n    setTodos([...todos, data.todo])\n\n  }\n\n  const removeTodo = async (id) => {\n    const res = await fetch(`http://localhost:5001/delete/${id}`, {\n      method: 'DELETE',\n    });\n\n    res.status === 200\n      ? setTodos(todos.filter((todo) => todo.id !== id))\n      : alert('There was an error while deleting');\n  }\n\n  const markTodo = async (id) => {\n    const todoToToggle = await fetchTodo(id);\n    const updatedTodo = { status: !todoToToggle.status }\n\n    const res = await fetch(`http://localhost:5001/put/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updatedTodo),\n    });\n\n\tif(res.status === 200) {\n\n\t\tconst data = await res.json();\n\n\t\tsetTodos(\n\t\t  todos.map((todo) =>\n\t\t\ttodo.id === id ? { ...todo, status: data.todo.status } : todo\n\t\t  )\n\t\t)\n\n\t}\n\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n\t  \t<Header />\t\t\n\t\t<AddToDo addTodo={addTodo}/>\n\t\t{todos.length > 0 ? (<Todos todos={todos} removeTodo={removeTodo} markTodo={markTodo} />) : ('No Todos To Show')}\t\t\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}